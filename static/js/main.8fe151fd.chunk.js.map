{"version":3,"sources":["services/DataManagerContext.js","App.js","components/FoodTable.js","components/Filters.js","components/Search.js","reportWebVitals.js","index.js"],"names":["FiltersContext","createContext","arrayMin","arr","reduce","p","v","arrayMax","Provider","Component","useDataManager","useContext","columns","title","dataIndex","key","FoodTable","data","dataSource","Filters","categories","selectedCategoriesFilter","caloriesRange","proteinsRange","carbsRange","fatsRange","fibresRange","setFatsFilter","setFibresFilter","setSelectedCategoriesFilter","setCaloriesFilter","setProteinsFilter","setCarbsFilter","maximums","allCategoriesChecked","length","categoriesCheckIndeterminate","checkAll","percentileTip","value","className","indeterminate","onChange","e","cats","target","checked","Group","options","defaultValue","range","tooltipVisible","onAfterChange","max","fats","tipFormatter","carbs","calories","proteins","fibres","Search","setSearchFilter","placeholder","debounce","Content","Layout","Sider","enhance","children","map","entry","Math","floor","calorii","min","proteine","carbohidrati","lipide","fibre","Array","from","Set","categorie","useState","entries","setEntries","minCalories","maxCalories","minProteins","maxProteins","minCarbs","maxCarbs","minFats","maxFats","minFibres","maxFibres","caloriesFilter","proteinsFilter","carbsFilter","fatsFilter","fibresFilter","searchFilter","useEffect","orderedEntries","criterion","sort","a","b","orderEntries","filters","searchTerm","filter","includesSearchTerm","RegExp","toLowerCase","test","aliment","includes","filterEntries","context","style","backgroundColor","padding","width","direction","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fe151fd.chunk.js","sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\nimport data from '../data/data';\n\nconst FiltersContext = createContext({})\n\nfunction arrayMin(arr) {\n  return arr.reduce(function (p, v) {\n    return ( p < v ? p : v );\n  }, []);\n}\n\nfunction arrayMax(arr) {\n  return arr.reduce(function (p, v) {\n    return ( p > v ? p : v );\n  }, []);\n}\n\nconst filterEntries = ({ entries, filters }) => {\n  const {\n    categories,\n    caloriesRange,\n    proteinsRange,\n    carbsRange,\n    fatsRange,\n    fibresRange,\n    searchTerm,\n  } = filters;\n\n  return entries.filter(entry => {\n\n    const includesSearchTerm = searchTerm.length > 0 ? RegExp(searchTerm.toLowerCase()).test(entry.aliment.toLowerCase()) : true;\n    \n    return categories.includes(entry.categorie) &&\n    +entry.calorii >= caloriesRange[0] &&\n    +entry.calorii <= caloriesRange[1] &&\n    +entry.proteine >= proteinsRange[0] &&\n    +entry.proteine <= proteinsRange[1] &&\n    +entry.carbohidrati >= carbsRange[0] &&\n    +entry.carbohidrati <= carbsRange[1] &&\n    +entry.lipide >= fatsRange[0] &&\n    +entry.lipide <= fatsRange[1] &&\n    +entry.fibre >= fibresRange[0] &&\n    +entry.fibre <= fibresRange[1] &&\n    includesSearchTerm\n  }\n    \n  )\n}\n\nconst orderEntries = ({entries, criterion}) => {\n  return entries.sort((a,b) => a[criterion] - b[criterion])\n}\n\nexport const DataManagerContext = ({ children }) => {\n\n  const maximums = {\n    calories: arrayMax(data.map(entry=> Math.floor(entry.calorii))),\n    proteins: Math.min(50, arrayMax(data.map(entry=> Math.floor(entry.proteine)))),\n    carbs: Math.min(50, arrayMax(data.map(entry=> Math.floor(entry.carbohidrati)))),\n    fats: Math.min(50, arrayMax(data.map(entry=> Math.floor(entry.lipide)))),\n    fibres: Math.min(50, arrayMax(data.map(entry=> Math.floor(entry.fibre)))),\n  }\n\n  const categories = Array.from(new Set(data.map(entry => entry.categorie)));\n\n  const [entries, setEntries] = useState(data)\n\n  const minCalories = arrayMin(entries.map(entry=> Math.floor(entry.calorii)));\n  const maxCalories = arrayMax(entries.map(entry=> Math.floor(entry.calorii)));\n  const minProteins = arrayMin(entries.map(entry=> Math.floor(entry.proteine)));\n  const maxProteins = Math.min(50, arrayMax(entries.map(entry=> Math.floor(entry.proteine))));\n  const minCarbs = arrayMin(entries.map(entry=> Math.floor(entry.carbohidrati)));\n  const maxCarbs = Math.min(50, arrayMax(entries.map(entry=> Math.floor(entry.carbohidrati))));\n  const minFats = arrayMin(entries.map(entry=> Math.floor(entry.lipide)));\n  const maxFats = Math.min(50, arrayMax(entries.map(entry=> Math.floor(entry.lipide))));\n  const minFibres = arrayMin(entries.map(entry=> Math.floor(entry.fibre)));\n  const maxFibres = Math.min(50, arrayMax(entries.map(entry=> Math.floor(entry.fibre))));\n\n  const [selectedCategoriesFilter, setSelectedCategoriesFilter] = useState(categories)\n  const [caloriesFilter, setCaloriesFilter] = useState([minCalories, maxCalories])\n  const [proteinsFilter, setProteinsFilter] = useState([minProteins, maxProteins])\n  const [carbsFilter, setCarbsFilter] = useState([minCarbs, maxCarbs])\n  const [fatsFilter, setFatsFilter] = useState([minFats, maxFats])\n  const [fibresFilter, setFibresFilter] = useState([minFibres, maxFibres])\n  const [searchFilter, setSearchFilter] = useState('')\n\n  useEffect(() => {\n    const filteredEntries = filterEntries({entries: data, filters: {\n      categories: selectedCategoriesFilter,\n      caloriesRange: caloriesFilter,\n      proteinsRange: proteinsFilter,\n      carbsRange: carbsFilter,\n      fatsRange: fatsFilter,\n      fibresRange: fibresFilter,\n      searchTerm: searchFilter,\n    }})\n    const orderedEntries = orderEntries({ entries: filteredEntries, criterion: 'calorii'})\n    setEntries(orderedEntries)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n      selectedCategoriesFilter,\n      caloriesFilter,\n      proteinsFilter,\n      carbsFilter,\n      searchFilter,\n      fatsFilter,\n      fibresFilter,\n    ])\n\n  const context = {\n    data: entries,\n    categories,\n    selectedCategoriesFilter,\n    caloriesRange: [minCalories, maxCalories],\n    proteinsRange: [minProteins, maxProteins],\n    carbsRange: [minCarbs, maxCarbs],\n    fatsRange: [minFats, maxFats],\n    fibresRange: [minFibres, maxFibres],\n    maximums,\n    searchFilter,\n    setSelectedCategoriesFilter,\n    setCaloriesFilter,\n    setProteinsFilter,\n    setCarbsFilter,\n    setSearchFilter,\n    setFatsFilter,\n    setFibresFilter,\n  }\n\n  return (\n    <FiltersContext.Provider value={context}>\n      { children }\n    </FiltersContext.Provider>\n  )\n}\n\nexport const useDataManager = () => useContext(FiltersContext)","import { Layout, Space } from 'antd';\nimport { FoodTable, Filters, Search } from './components';\nimport { DataManagerContext } from './services' \n\nimport 'antd/dist/antd.min.css';\nimport './App.css';\n\nconst { Content, Sider } = Layout;\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Sider style={{ backgroundColor: \"white\" }}>\n          <Filters />  \n        </Sider>\n        <Content style={{ padding: '25px 100px' }}>\n          <Space style={{ width: '100%' }} direction=\"vertical\">\n            <Search />\n            <FoodTable />\n          </Space>\n        </Content>\n      </Layout>\n    </div>\n  );\n}\n\nconst enhance = (Provider, Component) => props => (\n  <Provider>\n    <Component {...props} />\n  </Provider>\n);\n\nexport default enhance(DataManagerContext, App);\n","import { Table } from 'antd';\nimport { useDataManager } from '../services'\nconst columns = [\n  {\n    title: 'Aliment (100g)',\n    dataIndex: 'aliment',\n    key: 'aliment',\n  },\n  {\n    title: 'Calorii (c)',\n    dataIndex: 'calorii',\n    key: 'calorii',\n  },\n  {\n    title: 'Proteine (%)',\n    dataIndex: 'proteine',\n    key: 'proteine',\n  },\n  {\n    title: 'Lipide (%)',\n    dataIndex: 'lipide',\n    key: 'lipide',\n  },\n  {\n    title: 'Carbohidrati (%)',\n    dataIndex: 'carbohidrati',\n    key: 'carbohidrati',\n  },\n  {\n    title: 'Fibre (%)',\n    dataIndex: 'fibre',\n    key: 'fibre',\n  },\n  {\n    title: 'Aproximari',\n    dataIndex: 'aproximari',\n    key: 'aproximari',\n  },\n]\n\n\nexport const FoodTable = () => {\n  const { data } = useDataManager();\n  return (\n    <Table columns={columns} dataSource={data} />\n  );\n}\n","import { Fragment } from 'react';\nimport { Slider, Card, Checkbox } from 'antd';\nimport { useDataManager } from '../services'\nexport const Filters = () => {\n  const {\n    categories,\n    selectedCategoriesFilter,\n    caloriesRange,\n    proteinsRange,\n    carbsRange,\n    fatsRange,\n    fibresRange,\n    setFatsFilter,\n    setFibresFilter,\n    setSelectedCategoriesFilter,\n    setCaloriesFilter,\n    setProteinsFilter,\n    setCarbsFilter,\n    maximums,\n  } = useDataManager()\n\n  const allCategoriesChecked = categories.length === selectedCategoriesFilter.length\n  const categoriesCheckIndeterminate = \n    categories.length !== selectedCategoriesFilter.length &&\n    selectedCategoriesFilter.length > 0\n\n  const handleCheckAll = e => {\n    const cats = e.target.checked ? categories : []\n    setSelectedCategoriesFilter(cats)\n  }  \n\n  const checkAll = allCategoriesChecked ? 'Debifeaza toate': 'Bifeaza toate'\n\n  const percentileTip = value => `${value}%`\n  const gramsTip = value => `${value}g`\n\n  return (\n      <Fragment>\n        <Card title=\"Categorii\">\n          <div className=\"site-checkbox-all-wrapper\">\n            <Checkbox\n              indeterminate={categoriesCheckIndeterminate}\n              onChange={handleCheckAll}\n              checked={allCategoriesChecked}\n            >\n              {checkAll}\n            </Checkbox>\n          </div>\n          <Checkbox.Group \n            options={categories}\n            defaultValue={categories}\n            value={selectedCategoriesFilter}\n            onChange={setSelectedCategoriesFilter}\n          />\n\n        </Card>\n        <Card title=\"Grasimi\">\n          <Slider\n            range\n            defaultValue={fatsRange}\n            tooltipVisible\n            onAfterChange={setFatsFilter}\n            max={maximums.fats}\n            tipFormatter={percentileTip}\n          />\n        </Card>\n        <Card title=\"Carbohidrati\">\n          <Slider\n            range\n            defaultValue={carbsRange}\n            tooltipVisible\n            onAfterChange={setCarbsFilter}\n            max={maximums.carbs}\n            tipFormatter={percentileTip}\n          />\n        </Card>\n        <Card title=\"Calorii\">\n          <Slider\n            range\n            defaultValue={caloriesRange}\n            tooltipVisible\n            onAfterChange={setCaloriesFilter}\n            max={maximums.calories}\n            tipFormatter={gramsTip}\n          />\n        </Card>\n        <Card title=\"Proteine\">\n          <Slider\n            range\n            defaultValue={proteinsRange}\n            tooltipVisible\n            onAfterChange={setProteinsFilter}\n            max={maximums.proteins}\n            tipFormatter={percentileTip}\n          />\n        </Card>\n        <Card title=\"Fibre\">\n          <Slider\n            range\n            defaultValue={fibresRange}\n            tooltipVisible\n            onAfterChange={setFibresFilter}\n            max={maximums.fibres}\n            tipFormatter={percentileTip}\n          />\n        </Card>\n      </Fragment>\n\n  )\n}","import { Input } from 'antd';\nimport { debounce } from 'lodash';\nimport { useDataManager } from '../services';\n\nexport const Search = () => {\n  const {\n    setSearchFilter,\n  } = useDataManager()\n\n  const handleOnChange = e => {\n    setSearchFilter(e.target.value)\n  }\n\n  return (\n    <Input placeholder=\"Cauta Aliment\" onChange={debounce(handleOnChange, 300)}  />\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}